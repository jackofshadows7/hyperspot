[package]
name = "users_info"
version = "0.1.0"
publish = false
edition.workspace = true
license.workspace = true
authors.workspace = true

[features]
integration = []   # gate integration tests

[dependencies]
# Core dependencies
anyhow = "1.0"
async-trait = "0.1"
tokio = { version = "1.47", features = ["full"] }
tracing = "0.1"
inventory = "0.3"

# Serde and JSON schema
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
utoipa = { workspace = true }

# HTTP and REST
axum = { workspace = true, features = ["macros"] }
tower-http = { version = "0.6", features = ["timeout"] }
futures = "0.3"

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# URL parsing
url = "2.5"

# UUID support
uuid = { version = "1.18", features = ["v4", "serde"] }

# Lock-free atomic swaps
arc-swap = "1.7"
once_cell = "1.21"

# Database - SeaORM
sea-orm = { version = "1.1", features = [
    "sqlx-sqlite",
    "runtime-tokio-rustls",
    "macros",
    "with-chrono",
    "with-uuid"
] }
sea-orm-migration = "1.1"
rust_decimal = "1.38.0"

# Error handling
thiserror = "2.0"

# Local dependencies
modkit = { path = "../../../libs/modkit" }
modkit-db = { path = "../../../libs/modkit-db", default-features = false, features = ["pg", "sea-orm"] }
odata-core = { path = "../../../libs/odata-core", features = ["with-utoipa"] }

# HTTP client for outgoing requests
reqwest = { version = "0.12", default-features = false, features = ["rustls-tls", "json"] }

[dev-dependencies]
tower = { version = "0.5", features = ["util"] }
api_ingress = { path = "../../../modules/api_ingress" }
serde_json = "1.0"
testcontainers = "0.25"
testcontainers-modules = { version = "0.13", features = ["postgres"] }
# Testing dependencies for tracing verification
tracing-test = "0.2"
httpmock = "0.8.0"
tokio-test = "0.4"
opentelemetry = "0.31.0"
opentelemetry_sdk = "0.31.0"

